<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iflytek.rpa.market.dao.AppMarketDictDao">

    <resultMap type="com.iflytek.rpa.market.entity.AppMarketDict" id="AppMarketDictMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="businessCode" column="business_code" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="dictCode" column="dict_code" jdbcType="VARCHAR"/>
        <result property="dictValue" column="dict_value" jdbcType="VARCHAR"/>
        <result property="userType" column="user_type" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="seq" column="seq" jdbcType="INTEGER"/>
        <result property="creatorId" column="creator_id" jdbcType="CHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updaterId" column="updater_id" jdbcType="CHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getAppType" resultMap="AppMarketDictMap">
        select *
        from app_market_dict
        where
        type = 1
        and deleted = 0
    </select>

    <select id="getDictValueByCodeAndType" resultMap="AppMarketDictMap">
        select *
        from app_market_dict
        where
            business_code = 'marketRoleFunc'
        and user_type = #{userType}
        and dict_code = #{dictCode}
        and deleted = 0
    </select>

    <select id="getCodeInfo" resultType="java.lang.String">
        select
            dict_code
        from
            app_market_dict
        where
            business_code = 'marketRoleFunc'
        and dict_code = #{dictCode}
        and deleted = 0
        limit 1
    </select>
</mapper>
