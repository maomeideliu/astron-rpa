atomic:
  Network.http_request:
    title: HTTP请求
    comment: 向URL(@{url})发送HTTP请求(@{request_type}), 请求头(@{headers}), 请求体(@{body}),
      并保存响应结果到{@{http_response}}
    icon: http-request
    helpManual: 向指定url发送HTTP请求
    inputList:
    - key: url
      title: URL
      tip: ''
    - key: request_type
      title: 请求类型
      tip: ''
    - key: headers
      title: 请求头
      tip: ''
    - key: body
      title: 请求体
      tip: ''
    - key: file_path
      title: 待上传文件路径
      tip: ''
    - key: time_out
      title: 超时时间
      tip: ''
    - key: save_type
      title: 响应结果保存到文件
      tip: 将响应结果保存到指定文本文件中
    - key: save_path
      title: 文档保存目录
      tip: 输入文件保存目录
    - key: save_name
      title: 文件名称
      tip: 输入保存文件名称，默认为文本文件
    outputList:
    - key: http_response
      title: 保存响应结果到
      tip: ''
  Network.http_download:
    title: HTTP下载
    comment: HTTP下载
    icon: http-download
    helpManual: 下载指定URL(@{url})的文件保存到指定目录(@{dst_dir})中,并保存下载路径到变量(@{http_download_path})
    inputList:
    - key: url
      title: 下载地址
      tip: ''
    - key: dst_dir
      title: 文件保存目录
      tip: ''
    - key: rename
      title: 指定文件名
      tip: 不指定自动沿用下载路径中的默认文件名，没有默认文件名则报错
    - key: state_type
      title: 目录不存在时
      tip: 设置文件保存目录不存在时的处理方式
    - key: exist_type
      title: 文件存在时
      tip: 设置目标文件已存在时的处理方式
    outputList:
    - key: http_download_path
      title: 下载文件保存到
      tip: 将下载文件路径保存到变量中
  Network.ftp_create:
    title: 创建FTP连接
    comment: 建立与地址(@{host}),端口(@{port})的FTP连接，输出为(@{ftp_instance})
    icon: ftp-create-connection
    helpManual: 建立一个文件服务器的FTP连接，并返回连接对象
    inputList:
    - key: host
      title: 服务器地址
      tip: FTP服务器地址
    - key: port
      title: 服务器端口号
      tip: FTP服务器端口号
    - key: name
      title: 用户名
      tip: 文件服务器提供的可登录账号
    - key: password
      title: 用户密码
      tip: 文件服务器提供的可登录账号的密码
    outputList:
    - key: ftp_instance
      title: 保存FTP连接对象至
      tip: 将创建的FTP连接对象保存至指定变量中
  Network.ftp_close:
    title: 关闭FTP连接
    comment: 断开与(@{ftp_instance})的FTP连接，并将结果输出至变量(@{close_ftp})
    icon: ftp-close-connection
    helpManual: 断开一个FTP连接，并返回断开结果
    inputList:
    - key: ftp_instance
      title: FTP对象
      tip: 待断开的FTP连接对象
    outputList:
    - key: close_ftp
      title: 断开结果保存至
      tip: FTP连接是否成功断开的布尔值
  Network.get_work_dir:
    title: 获取工作目录(FTP)
    comment: 获取(@{ftp_instance})当前的工作目录，输出为(@{get_work_dir})
    icon: get-work-directory
    helpManual: 获取FTP对象当前工作目录
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 当前FTP连接对象
    outputList:
    - key: get_work_dir
      title: 工作目录保存至
      tip: 输出获取到的工作目录
  Network.change_working_dir:
    title: 切换工作目录(FTP)
    comment: 切换FTP连接(@{ftp_instance})的工作目录为(@{new_work_dir}),并保存切换后工作目录到(@{change_work_dir})中
    icon: change-work-directory
    helpManual: 切换FTP连接当前工作目录到指定路径
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 需要切换工作目录的FTP连接对象
    - key: new_work_dir
      title: 工作目录
      tip: 需要切换到的新的工作目录
    outputList:
    - key: change_work_dir
      title: 切换后工作目录
      tip: 输出切换后当前工作目录
  Network.create_folder:
    title: 创建文件夹(FTP)
    comment: 在指定FTP连接(@{ftp_instance})下创建文件夹(@{folder_name}),并保存新文件夹路径到(@{new_folder})中
    icon: create-folder
    helpManual: 在指定FTP连接下创建文件夹
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 需要创建文件夹的FTP连接对象
    - key: folder_name
      title: 新文件夹名称
      tip: 需要创建的文件夹名称
    - key: exist_type
      title: 文件夹存在时
      tip: 当FTP连接下存在同名文件夹时需要执行的操作
    outputList:
    - key: new_folder
      title: 创建后文件夹路径
      tip: 将创建后的文件夹路径保存至变量
  Network.get_ftp_list:
    title: 获取文件/文件夹(FTP)
    comment: 获取指定FTP连接(@{ftp_instance})下的(@{file_type})列表,并保存到(@{get_ftp_list})中
    icon: get-folder
    helpManual: 获取指定FTP连接下的全部文件/文件夹列表
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 需要获取文件和文件夹信息的FTP连接对象
    - key: file_type
      title: 获取对象
      tip: 选择需要获取的对象
    outputList:
    - key: get_ftp_list
      title: 获取的文件/文件夹列表
      tip: 将FTP连接下的文件/文件夹列表输出至变量
  Network.ftp_rename:
    title: 重命名文件/文件夹(FTP)
    comment: 重命名(@{ftp_instance})中(@{file_type})(@{cur_file_name||cur_folder_name})为新名称(@{new_file_name||new_folder_name}),并将重命名后路径保存至变量(@{rename_ftp_path})
    icon: rename-folder
    helpManual: 重命名FTP服务器上文件/文件夹
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 执行文件/文件夹重命名操作的FTP连接对象
    - key: file_type
      title: 重命名对象
      tip: ''
    - key: cur_file_name
      title: 原文件名称
      tip: 输入待重命名文件
    - key: new_file_name
      title: 新文件名称(不包含文件扩展名)
      tip: 输入新文件名称,不包含文件扩展名
    - key: cur_folder_name
      title: 原文件夹名称
      tip: 输入待重命名文件夹
    - key: new_folder_name
      title: 新文件夹名称
      tip: 输入新文件夹名称
    - key: exist_type
      title: 重命名对象存在时
      tip: 重命名后对象已存在时执行的操作
    outputList:
    - key: rename_ftp_path
      title: 重命名后路径
      tip: 保存重命名后(@{file_type})路径至变量
  Network.ftp_upload:
    title: 上传文件/文件夹(FTP)
    comment: 上传(@{file_path||folder_path})至FTP指定目录(@{ftp_pwd}),并将上传后路径结果保存到(@{upload_ftp_list})中
    icon: upload-folder
    helpManual: 将本地一个或多个文件/文件夹上传到至FTP指定目录下
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 需要上传文件/文件夹的FTP连接对象
    - key: file_type
      title: 上传对象
      tip: ''
    - key: ftp_pwd
      title: 远程工作目录
      tip: 文件/文件夹上传的远程工作目录,默认为空,上传至当前工作路径
    - key: file_path
      title: 待上传文件
      tip: 支持单个或多个文件上传,多个文件名之间用逗号隔开,如:test1.txt,test2.txt,test3.txt
    - key: folder_path
      title: 待上传文件夹
      tip: 支持单个或多个文件夹上传,多个文件夹之间用逗号隔开,如:folder1,folder2,folder3
    - key: exist_type
      title: 上传对象已存在时
      tip: 要上传的文件/文件夹在FTP服务器上已存在时的处理方式
    outputList:
    - key: upload_ftp_list
      title: 上传列表
      tip: 输出已上传文件/文件夹在FTP服务器上的路径信息至变量,数据类型为列表
  Network.ftp_download:
    title: 下载文件/文件夹(FTP)
    comment: 下载(@{download_file_name||download_folder_name})至本地目录(@{dst_path}),并将下载后路径保存到变量(@{download_ftp_path})
    icon: download-folder
    helpManual: 将FTP服务器上的多个文件/文件夹下载至本地
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 执行下载文件/文件夹的FTP服务器连接对象
    - key: file_type
      title: 下载对象
      tip: ''
    - key: download_file_name
      title: 待下载文件
      tip: 支持单个或多个文件下载,多个文件名之间用逗号隔开,如:test1.txt,test2.txt,test3.txt
    - key: download_folder_name
      title: 待下载文件夹
      tip: 支持单个或多个文件夹下载,多个文件夹之间用逗号隔开,如:folder1,folder2,folder3
    - key: dst_path
      title: 下载至
      tip: 本地存储路径
    - key: state_type
      title: 本地路径不存在时
      tip: 当本地存储路径不存在时执行的操作
    - key: exist_type
      title: 下载对象存在时
      tip: 下载文件/文件夹存在时执行的操作
    outputList:
    - key: download_ftp_path
      title: 下载列表
      tip: 输出已下载的文件/文件夹路径列表至变量,数据类型为列表
  Network.ftp_delete:
    title: 删除文件/文件夹(FTP)
    comment: 删除(@{ftp_instance})上(@{delete_file_name||delete_folder_name}),并输出删除结果至变量(@{delete_ftp_result})
    icon: delete-folder-ftp
    helpManual: 删除FTP服务器中指定文件/文件夹
    inputList:
    - key: ftp_instance
      title: FTP连接对象
      tip: 执行文件/文件夹删除操作的FTP连接对象
    - key: file_type
      title: 删除对象
      tip: ''
    - key: delete_file_name
      title: 待删除文件
      tip: 支持单个或多个文件删除,多个文件名之间使用逗号隔开,如:test1.txt,test2.txt,test3.txt
    - key: delete_folder_name
      title: 待删除文件夹
      tip: 支持单个或多个文件夹删除,多个文件夹之间用逗号隔开,如:folder1,folder2,folder3
    outputList:
    - key: delete_ftp_result
      title: 删除结果
      tip: 输出删除结果到变量,数据类型为布尔值
options:
  RequestType:
  - value: post
    label: post
  - value: get
    label: get
  - value: connect
    label: connect
  - value: put
    label: put
  - value: patch
    label: patch
  - value: delete
    label: delete
  - value: options
    label: options
  - value: head
    label: head
  - value: trace
    label: trace
  SaveType:
  - value: 'yes'
    label: 保存
  - value: 'no'
    label: 删除
  StateType:
  - value: create
    label: 新建
  - value: error
    label: 提示并报错
  FileExistenceType:
  - value: overwrite
    label: 覆盖原有文件
  - value: rename
    label: 创建文件副本
  - value: cancel
    label: 取消保存操作
  ListType:
  - value: all
    label: 全部
  - value: file
    label: 文件
  - value: folder
    label: 文件夹
  FileType:
  - value: file
    label: 文件
  - value: folder
    label: 文件夹
