atomic:
  BrowserElement.wait_element:
    title: 等待元素（web）
    comment: 等待浏览器对象 @{browser_obj} 中元素 @{element_data} 的（@{ele_status}）
    icon: wait-element-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择指定的网页元素所在的浏览器对象
    - key: element_data
      title: 元素拾取
      tip: 拾取需要等待的网页元素
    - key: ele_status
      title: 等待类型
      tip: 等待出现或者等待消失
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: wait_element
      title: 等待结果
      tip: 输出元素是否出现/消失，出现/消失为true，反之为false
  BrowserElement.element_exist:
    title: 元素是否存在（web）
    comment: 浏览器对象 @{browser_obj} 中元素 @{element_data} 是否存在
    icon: wait-element-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择指定的网页元素所在的浏览器对象
    - key: element_data
      title: 元素拾取
      tip: 拾取需要等待的网页元素
    outputList:
    - key: element_exist
      title: 元素存在/不存在
      tip: 输出元素是否存在，存在为true，不存在为false
  BrowserElement.click:
    title: 点击元素（web）
    comment: 通过 @{button_type:点击} 的形式点击浏览器对象 @{browser_obj} 中的元素 @{element_data}
    icon: click-element-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: element_data
      title: 拾取元素
      tip: 拾取需要操作的元素信息
    - key: simulate_flag
      title: 模拟人工点击
      tip: 模拟人工点击是模拟人为操作方式点击，否则将根据拾取元素的自动化接口进行点击
    - key: assistive_key
      title: 辅助按键
      tip: 在点击时需要按下的键盘功能按键
    - key: button_type
      title: 点击键位
      tip: 选择模拟鼠标点击的方式
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.input:
    title: 填写输入框（web）
    comment: 在指定的浏览器对象 @{browser_obj} 中拾取输入框 @{element_data} ，以 @{fill_type:键盘输入/剪贴板输入}
      的形式输入内容 @{fill_input} ，将执行结果输出至 @{form_input}
    icon: fill-input-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: element_data
      title: 拾取输入框
      tip: 拾取需要填写内容的输入框元素
    - key: simulate_flag
      title: 模拟人工输入
      tip: 模拟人工输入是模拟人为操作方式输入，否则将根据元素的自动化接口进行输入
    - key: fill_type
      title: 输入类型
      tip: 选择填写输入框的方式
    - key: fill_input
      title: 输入内容
      tip: 填写输入框的内容
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    - key: focus_time
      title: 焦点睡眠时间
      tip: 焦点停顿时间(ms)
    - key: write_gap_time
      title: 按键输入间隔
      tip: 输入内容输入的时间间隔(s)
    - key: input_type
      title: 追加输入
      tip: 是否对输入框进行追加输入
    outputList:
    - key: form_input
      title: 用户输入内容
      tip: ''
  BrowserElement.hover_over:
    title: 鼠标悬停在元素上（web）
    comment: 鼠标悬停在浏览器对象 @{browser_obj} 中的元素 @{element_data} 上
    icon: mouse-hover-element-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: element_data
      title: 悬停元素拾取
      tip: 拾取鼠标要悬停的元素
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.screenshot:
    title: 拾取元素截图（web）
    comment: 拾取浏览器对象 @{browser_obj} 的元素 @{element_data} 并输出为图片
    icon: pick-element-screenshot-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择截图元素所在的浏览器对象
    - key: element_data
      title: 拾取元素
      tip: 拾取需要截图的元素
    - key: file_path
      title: 截图保存路径
      tip: 文件夹路径
    - key: image_name
      title: 图片名称
      tip: 携带后缀的名称比如图片.jpg
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: xpath_shot
      title: 截图文件路径
      tip: 截图文件路径
  BrowserElement.position_screenshot:
    title: 元素位置截图（web）
    comment: 获取浏览器对象 @{browser_obj} 的元素 @{element_data} 位置截图并输出为图片
    icon: element-position-screenshot-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取元素
      tip: ''
    - key: file_path
      title: 截图保存路径
      tip: ''
    - key: image_name
      title: 图片名称
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: ''
    outputList:
    - key: position_shot
      title: 截图文件路径
      tip: ''
  BrowserElement.scroll:
    title: 鼠标滚动网页
    comment: 通过 @{scroll_direction:横向/纵向} 的方向，从（@{x_scroll_type||y_scroll_type}）滚动浏览器对象
      @{browser_obj} 的滚动条
    icon: mouse-scroll-webpage
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要滑动滚动条的网页所在浏览器对象
    - key: scrollbar_type
      title: 滚动目标
      tip: 选择网页窗口滚动条或指定网页上某个滚动条元素
    - key: element_data
      title: 拾取滚动条
      tip: 拾取需要在网页上滚动操作的滚动条元素
    - key: scroll_direction
      title: 滚动方向
      tip: ''
    - key: x_scroll_type
      title: 横向滚动位置
      tip: ''
    - key: x_custom_scroll_dis
      title: 横向自定义滚动距离
      tip: 单位为屏幕的分辨率像素px，一般为0-9999之间的数值
    - key: y_scroll_type
      title: 纵向滚动位置
      tip: ''
    - key: y_custom_scroll_dis
      title: 纵向自定义滚动距离
      tip: 单位为屏幕的分辨率像素px，一般为0-9999之间的数值
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.scroll_into_view:
    title: 元素置于可视区域（web）
    comment: 将网页元素 @{element_data} 置于可视区域
    icon: element-to-visible-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要可视的元素所在的浏览器对象
    - key: element_data
      title: 拾取可视目标
      tip: 拾取需要可视的目标元素
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.similar:
    title: 获取相似元素列表（web）
    comment: 获取浏览器对象 @{browser_obj} 中与拾取到的元素 @{element_data} 相似的元素，并将相似元素数组输出至 @{get_similar_ele}
    icon: get-similar-elements-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择相似元素所在的浏览器对象
    - key: element_data
      title: 相似元素拾取
      tip: 在网页上拾取不同位置的两个相似元素
    - key: get_type
      title: 元素操作
      tip: ''
    - key: attribute_name
      title: 属性名称
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: get_similar_ele
      title: 元素信息
      tip: ''
  BrowserElement.loop_similar:
    title: 循环相似元素列表（web）
    comment: 获取浏览器对象 @{browser_obj} 中与拾取到的元素 @{element_data} 相似的元素，从起始项@{start}到结束项@{end}进行循环操作，输出列表循环至@{item},
      是否输出循环项位置为@{index}
    icon: loop-similar-elements-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择相似元素所在的浏览器对象
    - key: element_data
      title: 相似元素拾取
      tip: 在网页上拾取不同位置的两个相似元素
    - key: get_type
      title: 元素操作
      tip: ''
    - key: start
      title: 起始位置
      tip: 下标位置从0开始
    - key: end
      title: 结束位置
      tip: 下标位置从0开始,-1代表循环至最后一个元素
    - key: attribute_name
      title: 属性名称
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: index
      title: 循环项位置
      tip: 默认变量可修改，用于遍历列表的变量索引数值
    - key: item
      title: 循环项
      tip: 默认变量可修改，用于遍历列表的变量
  BrowserElement.element_text:
    title: 获取元素文本内容（web）
    comment: 获取浏览器对象 @{browser_obj} 网页中拾取的元素 @{element_data} 文本内容，并将结果输出至 @{data_pick}
    icon: get-element-text-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要获取文本的元素所在的浏览器对象
    - key: element_data
      title: 元素拾取
      tip: 选择要获取文本的元素位置
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: data_pick
      title: 输出变量
      tip: 输出获取到的当前网页标题字符串
  BrowserElement.slider_hover:
    title: 拾取滑块拖拽（web）
    comment: 将滑块 @{element_slider} 从 @{drag_type} 向 @{drag_direction} 拖拽 @{percent_value}
      %
    icon: pick-slider-drag-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_slider
      title: 拾取滑块
      tip: ''
    - key: element_progress
      title: 拾取轨道
      tip: ''
    - key: percent_value
      title: 滑块移动比例
      tip: ''
    - key: drag_direction
      title: 拖拽方向
      tip: ''
    - key: drag_type
      title: 拖拽类型
      tip: ''
    - key: duration
      title: 拖动的持续时间
      tip: ''
    outputList: []
  BrowserElement.get_select:
    title: 获取下拉框（web）
    comment: 在浏览器对象 @{browser_obj} 中获取下拉框 @{element_data}
    icon: get-dropdown-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取下拉框
      tip: ''
    - key: current_content
      title: 获取当前选中内容
      tip: 选中内容或者所有内容
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: get_selected
      title: 下拉框选中内容
      tip: ''
  BrowserElement.get_checked:
    title: 获取复选框（web）
    comment: 在浏览器对象 @{browser_obj} 中获取复选框 @{element_data}
    icon: get-checkbox-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取复选框
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: get_checkbox_checked
      title: 复选框选中内容
      tip: ''
  BrowserElement.set_select:
    title: 操作下拉框（web）
    comment: 在浏览器对象 @{browser_obj} 中获取下拉框 @{element_data} ，通过 @{pattern} 选择 @{value}
    icon: operate-dropdown-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取下拉框
      tip: ''
    - key: pattern
      title: 匹配模式
      tip: ''
    - key: value
      title: 匹配内容
      tip: ''
    - key: solution
      title: 顺序
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.set_checked:
    title: 操作复选框（web）
    comment: 在浏览器对象 @{browser_obj} 中获取复选框 @{element_data} 后 @{checked_type}
    icon: operate-checkbox-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取复选框
      tip: ''
    - key: checked_type
      title: 操作类型
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserElement.element_operation:
    title: 元素操作（web）
    comment: 在浏览器对象 @{browser_obj} 中获取 @{element_data} 并 @{operation_type}
    icon: element-operation-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 拾取元素
      tip: ''
    - key: operation_type
      title: 操作类型
      tip: 设置-获取-删除信息
    - key: get_type
      title: 信息类型
      tip: ''
    - key: attribute_name
      title: 属性名称
      tip: ''
    - key: position
      title: 相对位置
      tip: ''
    - key: attribute_value
      title: 属性值
      tip: ''
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: get_ele_attr
      title: 元素属性
      tip: ''
    - key: get_ele_value
      title: 元素值
      tip: ''
    - key: get_ele_html
      title: 元素源代码
      tip: ''
    - key: get_ele_link
      title: 元素链接地址
      tip: ''
    - key: get_ele_text
      title: 元素文本内容
      tip: ''
    - key: get_ele_position
      title: 元素位置
      tip: ''
    - key: get_ele_selected
      title: 元素选中状态
      tip: ''
  BrowserElement.get_table:
    title: 获取表格数据（web）
    comment: 获取浏览器对象 @{browser_obj} 中的表格 @{element_data} ，将结果输出为字典对象 @{table_pick}
    icon: get-table-data-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: element_data
      title: 拾取表格
      tip: 拾取网页表格中任一单元格元素，无须拾取整个表格
    - key: to_excel
      title: 存储到表格文档
      tip: 可直接存储为excel文档
    - key: excel_path
      title: 表格文档路径
      tip: 请选择文档存储路径
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: table_pick
      title: 表格对象
      tip: 输出获取的表格对象，数据类型：字典
  BrowserElement.data_batch:
    title: 数据抓取（web）
    comment: 在指定的浏览器对象 @{browser_obj} 中抓取 @{batch_data} ，将结果输出为字典对象 @{table_pick}
    icon: data-scraping-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: batch_data
      title: 抓取对象
      tip: 拾取需要抓取的元素
    - key: multi_page
      title: 是否抓取多页
      tip: 选择需要是否抓取多页，默认抓取当前页
    - key: page_count
      title: 抓取页数
      tip: 填写需要抓取的总页数，例如：抓取10页，则填写10
    - key: page_interval
      title: 翻页间隔时间，单位：秒
      tip: 填写翻页的间隔时间，若间隔时间过短导致页面加载不完全，可适当增加翻页间隔时间
    - key: element_data
      title: 翻页按钮
      tip: 拾取需要翻页的元素
    - key: simulate_flag
      title: 模拟人工输入
      tip: 模拟人工输入是模拟人为操作方式输入，否则将根据元素的自动化接口进行输入
    - key: button_type
      title: 点击键位
      tip: 选择模拟鼠标点击的方式
    - key: to_excel
      title: 存储到表格文档
      tip: 可直接存储为excel文档
    - key: excel_path
      title: 表格文档路径
      tip: 请选择文档存储路径
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    - key: output_type
      title: 输出类型
      tip: 选择表格输出类型，默认输出为行
    - key: output_head
      title: 是否输出表头
      tip: 选择是否输出表头，默认输出表头
    outputList:
    - key: table_pick
      title: 表格对象
      tip: 输出获取的表格对象，数据类型：字典
    - key: table_path
      title: 表格路径
      tip: 输出保存的表格路径
  BrowserElement.create_element:
    title: 获取元素对象（web）
    comment: 在指定的浏览器对象 @{browser_obj} 中根据 @{locate_type}获取元素对象 ，将结果输出为元素对象 @{element_obj}
    icon: get-element-object-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: locate_type
      title: 定位方式
      tip: 选择Xpath或者CssSelector定位方式
    - key: locate_value
      title: Xpath/CssSelector
      tip: 输入Xpath或者CssSelector
    outputList:
    - key: element_obj
      title: 元素对象
      tip: 输出元素对象，结果为单个对象或列表
  BrowserElement.get_relative_element:
    title: 获取关联元素（web）
    comment: 在指定的浏览器对象 @{browser_obj} 中获取 @{element_data} 关联的 @{relative_type}，将结果输出为元素对象
      @{element_obj}
    icon: get-related-elements-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: ''
    - key: element_data
      title: 元素对象
      tip: 作为锚点的元素，只能是单个元素对象，不能是列表
    - key: relative_type
      title: 关联类型
      tip: 选择关联类型，例如：兄弟元素、父级元素、子级元素等
    - key: child_element_type
      title: 子元素类型
      tip: 选择获取子元素的类型
    - key: child_element_xpath
      title: 子元素xpath
      tip: 填写子元素的xpath，仅获取单个元素
    - key: child_element_index
      title: 子元素位置
      tip: 填写子元素位置，例如：0表示第一个子元素
    - key: sibling_element_type
      title: 兄弟元素类型
      tip: 选择获取兄弟元素的类型
    - key: element_timeout
      title: 等待元素出现时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: element_obj
      title: 元素对象
      tip: 输出元素对象，结果为单个对象或列表
  BrowserScript.js_run:
    title: Js脚本
    comment: 通过 @{input_type:在线编辑/外部导入方式} 编辑脚本内容 @{content||file_path} ，执行JavaScript，脚本执行结果保存至
      @{program_script}
    icon: js-script
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择js运行的浏览器对象
    - key: input_type
      title: 写入方式
      tip: ''
    - key: content
      title: 脚本内容
      tip: 编辑要执行的自定义脚本
    - key: file_path
      title: 脚本路径
      tip: ''
    - key: params
      title: 参数管理
      tip: 输入脚本相关的参数管理,注意参数会被序列化,一些不支持序列化的将会报错
    - key: element_data
      title: iframe元素对象
      tip: 对于iframe中执行有问题的，可以获取iframe的元素对象来辅助iframe的脚本执行
    - key: iframe_url
      title: iframe地址
      tip: 对于iframe中执行有问题，可以获取iframe的src字段填入此处
    outputList:
    - key: program_script
      title: 执行结果
      tip: ''
  BrowserSoftware.browser_open:
    title: 打开浏览器
    comment: 打开 @{browser_type:浏览器} 并进入初始网址 @{url:网址} ，将结果输出为浏览器对象 @{web_open}
    icon: open-browser
    helpManual: ''
    inputList:
    - key: url
      title: 初始网址
      tip: 初始网址
    - key: browser_type
      title: 浏览器类型
      tip: 选择浏览器类型,需安装星火数字员工插件实现网页自动化,路径：设置-插件安装
    - key: browser_abs_path
      title: 浏览器路径
      tip: 浏览器软件安装路径
    - key: open_args
      title: 浏览器启动参数
      tip: 浏览器启动参数，比如--incognito
    - key: open_with_incognito
      title: 使用隐私模式
      tip: 请提前将浏览器中“星火数字员工插件”详情设置为"在无痕模式下启用"
    - key: wait_load_success
      title: 等待网页加载完成
      tip: ''
    - key: timeout
      title: 加载延时时间（秒）
      tip: ''
    - key: timeout_handle_type
      title: 延时超时后执行
      tip: 延时处理方式，终止即停止网页加载，跳过即跳过等待加载，不影响网页加载
    outputList:
    - key: web_open
      title: 浏览器对象
      tip: 输出打开的浏览器对象,使用此网页对象可实现网页自动化
  BrowserSoftware.browser_close:
    title: 关闭浏览器
    comment: 关闭浏览器对象 @{browser_obj}
    icon: close-browser
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要关闭的浏览器对象
    outputList: []
  BrowserSoftware.set_cookies:
    title: 设置Cookie
    comment: 设置浏览器对象 @{browser_obj} 的Cookie值为 @{cookie_input}
    icon: set-cookie
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要设置Cookies的浏览器对象
    - key: url
      title: 目标url
      tip: ''
    - key: cookie_name
      title: cookie名称
      tip: ''
    - key: cookie_val
      title: cookie值
      tip: ''
    - key: page_timeout
      title: 等待页面加载时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: cookie_input
      title: cookie值
      tip: ''
  BrowserSoftware.get_cookies:
    title: 获取Cookie
    comment: 获取浏览器对象 @{browser_obj} 的Cookie值，输出至 @{get_cookie}
    icon: get-cookie
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要获取cookie值的浏览器对象
    - key: url
      title: 目标url
      tip: ''
    - key: cookie_name
      title: cookie名称
      tip: ''
    - key: page_timeout
      title: 等待页面加载时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: get_cookie
      title: cookie值
      tip: ''
  BrowserSoftware.web_open:
    title: 打开新网页
    comment: 打开浏览器对象 @{browser_obj} 并进入网址 @{new_tab_url:新标签页地址} ，将结果输出为浏览器对象（open_new_tab_1)
    icon: open-new-webpage
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: new_tab_url
      title: 新标签页网址
      tip: 新打开标签页所在的网址
    - key: wait_page
      title: 等待网页加载完成
      tip: ''
    outputList:
    - key: web_new_page
      title: 浏览器对象
      tip: ''
  BrowserSoftware.web_switch:
    title: 切换到已存在标签页
    comment: 通过 @{switch_type} 的匹配方式切换到浏览器对象 @{browser_obj} 中的指定标签页
    icon: switch-existing-tab
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: switch_type
      title: 匹配方式
      tip: 选择网址/标题/标签页ID的匹配方式
    - key: tab_url
      title: 网址
      tip: ''
    - key: tab_title
      title: 标题
      tip: ''
    - key: tab_id
      title: 标签页ID
      tip: ''
    outputList:
    - key: toggle_tab
      title: 切换到的标签页
      tip: ''
  BrowserSoftware.wait_web_load:
    title: 等待页面加载完成
    comment: 等待浏览器对象 @{browser_obj} 中页面加载
    icon: wait-page-load
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要等待页面所在的浏览器对象
    - key: timeout
      title: 超时时间（秒）
      tip: 超过该时间停止等待
    outputList: []
  BrowserSoftware.stop_web_load:
    title: 停止加载网页
    comment: 停止加载网页 @{browser_obj}
    icon: stop-loading-page
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要停止加载的网页所在浏览器对象
    outputList: []
  BrowserSoftware.web_refresh:
    title: 刷新当前网页
    comment: 刷新当前网页 @{browser_obj}
    icon: refresh-current-page
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要刷新当前网页所在的浏览器对象
    outputList: []
  BrowserSoftware.web_close:
    title: 关闭网页
    comment: 关闭浏览器对象 @{browser_obj} 的当前网页
    icon: close-webpage
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要关闭的标签页所在的浏览器对象
    - key: url
      title: url
      tip: 不填写则关闭当前标签页
    outputList: []
  BrowserSoftware.screenshot:
    title: 网页截图
    comment: 将浏览器对象 @{browser_obj} 截图，并保存至路径 @{web_screen}
    icon: webpage-screenshot
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要截图网页所在的浏览器对象
    - key: shot_range
      title: 截图区域
      tip: 选择截图的区域类型，若选择全部区域，会生成整个页面的长图
    - key: image_path
      title: 截图保存路径
      tip: 截图保存的本地电脑文件夹路径
    - key: image_name
      title: 图片名称
      tip: 填写图片名，可以带或不带扩展名
    - key: page_timeout
      title: 等待页面加载时间（秒）
      tip: 超过该时间停止等待
    outputList:
    - key: web_screen
      title: 文件路径
      tip: ''
  BrowserSoftware.browser_forward:
    title: 网页前进
    comment: 浏览器对象 @{browser_obj} 的当前网页前进
    icon: webpage-forward
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要网页前进所在的浏览器对象
    outputList: []
  BrowserSoftware.browser_back:
    title: 网页后退
    comment: 浏览器对象 @{browser_obj} 的当前网页后退
    icon: webpage-backward
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要网页后退所在的浏览器对象
    outputList: []
  BrowserSoftware.get_current_obj:
    title: 获取已打开的浏览器对象
    comment: 获取已经打开的浏览器软件 @{browser_type} 的浏览器对象，并将结果输出至 @{browser_obj}
    icon: get-open-browser-objects
    helpManual: ''
    inputList:
    - key: browser_type
      title: 浏览器类型
      tip: 选择该浏览器对象所在的浏览器类型
    outputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 保存获取的浏览器对象,使用此对象进行网页自动化操作
  BrowserSoftware.get_current_url:
    title: 获取网页URL
    comment: 获取浏览器对象 @{browser_obj} 的URL值，并将结果输出至 @{get_url}
    icon: get-webpage-url
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择获取页面URL所在的浏览器对象
    outputList:
    - key: get_url
      title: 网页url
      tip: ''
  BrowserSoftware.get_current_title:
    title: 获取网页标题
    comment: 获取浏览器对象 @{browser_obj} 的标题，并将结果输出至 @{get_page_title}
    icon: get-webpage-title
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择获取页面标题所在的浏览器对象
    outputList:
    - key: get_page_title
      title: 网页标题
      tip: ''
  BrowserSoftware.get_current_tab_id:
    title: 获取当前标签页ID
    comment: 获取浏览器对象 @{browser_obj}当前标签页的唯一ID，并将结果输出至 @{get_tab_id}
    icon: get-current-tab-id
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择获取标签页ID所在的浏览器对象
    outputList:
    - key: get_tab_id
      title: 标签页ID
      tip: ''
  BrowserSoftware.download_web_file:
    title: 文件下载（web）
    comment: 在网页中点击 @{element_data||link_str} 下载，将其保存至 @{save_path}
    icon: file-download-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要点击下载的网页元素所在的浏览器对象
    - key: element_data
      title: 拾取点击目标
      tip: 选择要点击下载的网页元素
    - key: download_mode
      title: 下载场景
      tip: ''
    - key: link_str
      title: 下载链接地址
      tip: ''
    - key: save_path
      title: 保存路径
      tip: 选择保存文件的文件夹路径
    - key: custom_flag
      title: 自定义命名
      tip: ''
    - key: file_name
      title: 自定义文件名
      tip: 不需要输入扩展名，系统会自动添加扩展名【系统建议打开显示扩展名】
    - key: simulate_flag
      title: 模拟人工点击
      tip: 模拟人工点击是模拟人为操作方式点击，否则将根据拾取元素的自动化接口进行点击
    - key: is_wait
      title: 同步等待
      tip: ''
    - key: time_out
      title: 最长等待时间
      tip: 超过最长等待时间（秒）则停止等待
    outputList:
    - key: load_file
      title: 文档路径
      tip: ''
  BrowserSoftware.upload_web_file:
    title: 文件上传（web）
    comment: 在网页中点击 @{element_data} ，在弹出的文件选择对话框中输入要上传的文件路径 @{upload_path}
    icon: file-upload-web
    helpManual: ''
    inputList:
    - key: browser_obj
      title: 浏览器对象
      tip: 选择要点击上传的网页元素所在的浏览器对象
    - key: element_data
      title: 拾取点击目标
      tip: 选择要点击上传的网页元素
    - key: upload_path
      title: 上传文件路径
      tip: 待上传文件完整路径，若要选择多个文件，切换到Python模式，输入文件列表，例:["文件1路径", "文件2路径"]
    - key: simulate_flag
      title: 模拟人工点击
      tip: 模拟人工点击是模拟人为操作方式点击，否则将根据拾取元素的自动化接口进行点击
    outputList:
    - key: download_file
      title: 文档路径
      tip: ''
options:
  WaitElementForStatusFlag:
  - value: y
    label: 等待元素出现
  - value: n
    label: 等待元素消失
  Bool:
  - value: true
    label: 是
  - value: false
    label: 否
  ButtonForAssistiveKeyFlag:
  - value: None
    label: 无
  - value: Alt
    label: Alt
  - value: Ctrl
    label: Ctrl
  - value: Shift
    label: Shift
  - value: Win
    label: Win
  ButtonForClickTypeFlag:
  - value: click
    label: 左击
  - value: dbclick
    label: 双击
  - value: right
    label: 右击
  FillInputForFillTypeFlag:
  - value: text
    label: 键盘输入
  - value: clipboard
    label: 剪贴板
  FillInputForInputTypeFlag:
  - value: append
    label: 追加
  - value: overwrite
    label: 覆盖
  ScrollbarType:
  - value: window
    label: 窗口
  - value: customEle
    label: 自定义目标
  ScrollDirection:
  - value: horizontal
    label: 横向
  - value: vertical
    label: 纵向
  ScrollbarForXScrollTypeFlag:
  - value: left
    label: 最左
  - value: right
    label: 最右
  - value: defined
    label: 自定义
  ScrollbarForYScrollTypeFlag:
  - value: top
    label: 顶部
  - value: bottom
    label: 底部
  - value: defined
    label: 自定义
  ElementGetAttributeHasSelfTypeFlag:
  - value: getElement
    label: 获取元素对象
  - value: getText
    label: 获取元素文本内容
  - value: getHtml
    label: 获取元素源代码
  - value: getValue
    label: 获取元素值
  - value: getLink
    label: 获取元素链接地址
  - value: getAttribute
    label: 获取元素属性
  - value: getPosition
    label: 获取元素位置
  - value: getSelection
    label: 获取元素选中状态
  ElementDragDirectionTypeFlag:
  - value: left
    label: 左
  - value: right
    label: 右
  - value: up
    label: 上
  - value: down
    label: 下
  ElementDragTypeFlag:
  - value: start
    label: 起始位置
  - value: current
    label: 当前位置
  SelectionPartner:
  - value: contains
    label: 模糊匹配
  - value: equal
    label: 精准匹配
  - value: index
    label: 顺序匹配
  ElementCheckedTypeFlag:
  - value: checked
    label: 勾选
  - value: unchecked
    label: 取消勾选
  - value: reversed
    label: 反选
  ElementAttributeOpTypeFlag:
  - value: get
    label: 获取属性
  - value: set
    label: 设置属性
  - value: del
    label: 删除属性
  ElementGetAttributeTypeFlag:
  - value: getText
    label: 获取元素文本内容
  - value: getHtml
    label: 获取元素源代码
  - value: getValue
    label: 获取元素值
  - value: getLink
    label: 获取元素链接地址
  - value: getAttribute
    label: 获取元素属性
  - value: getPosition
    label: 获取元素位置
  - value: getSelection
    label: 获取元素选中状态
  RelativePosition:
  - value: screenLeft
    label: 屏幕左上
  - value: webPageLeft
    label: 页面左上
  TablePickType:
  - value: row
    label: 按行输出
  - value: column
    label: 按列输出
  LocateType:
  - value: xpath
    label: xpath
  - value: cssSelector
    label: css选择器
  RelativeType:
  - value: child
    label: 子元素
  - value: parent
    label: 父元素
  - value: sibling
    label: 兄弟元素
  ChildElementType:
  - value: all
    label: 所有子元素
  - value: index
    label: 第n个子元素
  - value: xpath
    label: 子元素xpath
  - value: last
    label: 最后一个子元素
  SiblingElementType:
  - value: all
    label: 所有兄弟元素
  - value: next
    label: 下一个兄弟元素
  - value: prev
    label: 上一个兄弟元素
  InputType:
  - value: content
    label: 在线编辑
  - value: file
    label: 外部导入
  CommonForBrowserType:
  - value: chrome
    label: Chrome
  - value: edge
    label: Edge
  - value: ie
    label: IE
  - value: 360se
    label: 360安全浏览器
  - value: 360ChromeX
    label: 360极速浏览器X
  - value: firefox
    label: Firefox
  - value: chromium
    label: 内置浏览器
  CommonForTimeoutHandleType:
  - value: execError
    label: 终止
  - value: stopLoad
    label: 跳过
  WebSwitchType:
  - value: url
    label: 网址
  - value: title
    label: 标题
  - value: tabId
    label: 标签页ID
  ScreenShotForShotRangeFlag:
  - value: visual
    label: 可视区域
  - value: all
    label: 全网页区域
  DownloadModeForFlag:
  - value: click
    label: 点击下载
  - value: link
    label: 链接下载
